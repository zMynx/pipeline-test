# [Lior Dux] ==================== [ GitHub Actions CI-CD Pipelien ] ====================  [14-02-2023] #
#
# Purpose:
# This workflow is meant to tag the image correctly, and push into AWS Elastic Container Registery.
#
# Actions plugibs used:
# 1) (checkout@v3)[https://github.com/marketplace/actions/checkout]
#
name: Publish
on:
  workflow_call:
    # Reguired inputs
    inputs:
      environment:
        required: true
        type: string
      imageTag:
        required: true
        type: string
      taskDefinitionContext:
        required: true
        type: string

    # Required secrets
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      ECR_REGISTRY:
        required: true
      REPO_NAME:
        required: true

jobs:
  Deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
  
      - name: Git clone
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        working-directory: ${{ inputs.taskDefinitionContext }}
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: my-container
          image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.REPO_NAME }}:${{ inputs.imageTag }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          # service: my-service
          cluster: test_for-github-workflow-test_cluster
          wait-for-service-stability: false