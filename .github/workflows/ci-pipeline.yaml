# [Lior Dux] ==================== [ GitHub Actions CI-CD Pipelien ] ====================  [14-02-2023] #
# 
# Main Stages: Package, Test, Publish, Deploy.
# Additional:  Semantic Versioning, Git taggin, Slack notifications.
#
# Maintainer Notes:
# 1. Use quality actions only.
# 2. Prefer using actions to code.
# 3. Decoupling make jobs more versitile and dynamic, therefor it's a prefered method.
#
# TBD - Security Hardening
# GitHub OpenID Connect - https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
# Configure AWS -         https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
#
name: ci-pipeline
on:
  push:
    branches: ['main', 'feature/*']
  pull_request:
    branches: ['main']

# permission can be added at job level or workflow level    
permissions:
  contents: read  # This is required for actions/checkout
  # id-token: write # This is required for requesting the JWT

jobs:
  Build:
    uses: ./.github/workflows/build.yml
    with:
      DockerfileContext: ./GitHub-Actions/demodocker

  Test:
    needs: [Build]
    uses: ./.github/workflows/test.yml
    with:
      DockerfileContext: ./GitHub-Actions/demodocker

  SemVer:
    needs: [Build, Test]
    uses: ./.github/workflows/semver.yml

  Publish:
    needs: [Build, Test, SemVer]
    uses: ./.github/workflows/publish.yml
    with:
      environment: Testing
      DockerfileContext: ./GitHub-Actions/demodocker
      publishTag: ${{ needs.SemVer.outputs.publishTag }}
    secrets: inherit

  # Deploy: ### WORK IN PROGRESS ###
  #   needs: [Build, Test, SemVer, Publish]
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     environment: Testing
  #     taskDefinitionContext: ./GitHub-Actions/demodocker
  #     imageTag: ${{ needs.SemVer.outputs.publishTag }}
  #   secrets: inherit

  GitTag:
    needs: [Build, Test, SemVer, Publish, Deploy]
    uses: ./.github/workflows/gittag.yml
    with:
      toTag: "v${{ needs.SemVer.outputs.publishTag }}"
    secrets:
      SECRET_REPO_DEPLOY_KEY: ${{ secrets.SECRET_REPO_DEPLOY_KEY }}

  slackNotification:
    needs: [Build, Test, SemVer, Publish, GitTag]
    if: always()
    uses: ./.github/workflows/slacknotification.yml
    with:
      result: ${{ needs.GitTag.result }}
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}