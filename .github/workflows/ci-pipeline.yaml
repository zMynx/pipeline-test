name: ci-pipeline

on:
  push:
    branches: ['main', 'feature/*']

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Testing
    steps:
      # Git Clone
      - name: Checkout
        uses: actions/checkout@v3
      
      # Build the image
      - name: Package
        working-directory: ./GitHub-Actions/demodocker
        run:  |
          docker build -t pipeline:current-build-test
    
      # Unit Test Current Build
      - name: Test
        working-directory: ./GitHub-Actions/demodocker
        run: |
          docker run --name dockertest -d  pipeline:current-build-test
          echo "Assume we have unit tests to run..."
          docker stop dockertest
  
  configure:
    runs-on: ubuntu-latest
    environment: Testing
    steps:
      
      # Set up AWS Auth
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          # role-duration-seconds: 1200
      
      # Delivery prep
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      # Git Clone
      - name: Checkout
        uses: actions/checkout@v3
        
      # Delivery
      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        id: build-image
        with:
          context: ./GitHub-Actions/demodocker
          push: true
          tags: 442284833462.dkr.ecr.eu-west-1.amazonaws.com/pipeline-test:0.1 
