name: ci-pipeline

on:
  push:
    branches: ['main', 'feature/*']

env:
  AWS_REGION:     ${{ env.AWS_REGION }}    # set this to your preferred AWS region, e.g. us-west-1
  ECR_REGISTRY:   ${{ secrets.ECR_REGISTRY }}  # set this to your Amazon ECR repository name
  ECR_REPOSITORY: ${{ secrets.REPO_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Testing
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: whoami ?
        run: echo $(whoami) && pwd

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1 #${{ env.AWS_REGION }}
          # role-duration-seconds: 1200

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        id: build-image
        with:
          context: ./GitHub-Actions/demodocker
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY}}:0.11 
          #442284833462.dkr.ecr.eu-west-1.amazonaws.com/pipeline-test:0.1 
          #${{ env.ECR_REGISTRY }}/${{ env.REPO_NAME }}:${{ github.sha }}
        #   ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        #   ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        #   IMAGE_TAG: ${{ github.sha }}
        # run: |
        #   docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        #   docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #   echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
