name: ci-pipeline

on:
  push:
    branches: ['main', 'feature/**']

env:
  AWS_REGION:     AWS_REGION    # set this to your preferred AWS region, e.g. us-west-1
  ECR_REGISTRY:   ECR_REGISTRY  # set this to your Amazon ECR repository name
  ECR_REPOSITORY: REPO_NAME    

# TBD - Read about this
# permissions:
#   contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: whoami ?
        run: echo $(whoami)

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{secrets secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
  # package:
  # publish:
  # deploy:
  # report: